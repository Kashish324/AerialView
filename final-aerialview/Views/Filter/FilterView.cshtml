@* @{
    var priorities = new[] { "Standard", "Date" };
    var Items = new[] { "Previous Day", "1 Week", "1 Month", "3 Months", "6 Months", "1 Year", "All" };
}

@{
    Layout = null;
}

<div class='filterOptions d-flex align-items-center gap-2'>
    <div class="dx-field-label"><i class="ri-filter-2-line filter-icon"></i> Filter : </div>
    <div class="dx-field-value radioOption">
        @(Html.DevExtreme().RadioGroup()
            .Items(priorities)
            .Value("Standard")
            .OnValueChanged("selectedOption")
            .Layout(Orientation.Horizontal)
            .ID("radioOption")
            )
    </div>
    <div class="radioGroupContainer">
        <div id="standardFilterContainer" style="display: block;">
            @(Html.DevExtreme().SelectBox()
                .DataSource(Items)
                .OnValueChanged("selectBox_valueChanged")
                .InputAttr("aria-label", "Standard Time")
                .ID("standardFilter")
                )
        </div>

        <div id="datePickerContainer" style="display: none;">
            <div class="datePicker">
                <div class="dx-field fromDate">
                    <div class="dx-field-value">
                        @(Html.DevExtreme().DateBox()
                            .InputAttr("aria-label", "Date And Time")
                            .Type(DateBoxType.DateTime)
                            .Value(DateTime.Now.AddHours(-1))
                            .DisplayFormat("dd/MM/yyyy HH:mm:ss")
                            .ShowClearButton(true)
                            .OnValueChanged("fromDate")
                            )
                    </div>
                </div>

                <div class="dx-field toDate">
                    <div class="dx-field-value">
                        @(Html.DevExtreme().DateBox()
                            .InputAttr("aria-label", "Date And Time")
                            .Type(DateBoxType.DateTime)
                            .Value(DateTime.Now)
                            .DisplayFormat("dd/MM/yyyy HH:mm:ss")
                            .ShowClearButton(true)
                            .OnValueChanged("toDate")

                            )
                    </div>
                </div>
            </div>
        </div>
    </div>

  

    <form id="myForm" action="/ListData/DataGrid" method="post">
        <input type="hidden" id="selectedOption" name="option">
        <input type="hidden" id="selectedValue" name="selectedValue">
        <input type="hidden" id="fromDate" name="fromDate">
        <input type="hidden" id="toDate" name="toDate">


        <input type="hidden" name="tableName" value="@Model.TableName" />
        <input type="hidden" name="connString" value="@Model.ConnectionString" />
        <div class="previewBtn">
            @(Html.DevExtreme().Button()
                .Text("Apply")
                .Icon("check")
                .StylingMode(ButtonStylingMode.Contained)
                .Type(ButtonType.Normal)
                .Width(100)
                )
        </div>
    </form>
</div>


<partial name="~/Views/ListData/Datagrid.cshtml" />

<script>
    function formatDate(date) {
        var day = date.getDate();
        var month = date.getMonth() + 1; // Months are zero-based
        var year = date.getFullYear();
        var hours = date.getHours();
        var minutes = date.getMinutes();
        var seconds = date.getSeconds();

        // Pad single digits with a leading zero
        day = day < 10 ? '0' + day : day;
        month = month < 10 ? '0' + month : month;
        hours = hours < 10 ? '0' + hours : hours;
        minutes = minutes < 10 ? '0' + minutes : minutes;
        seconds = seconds < 10 ? '0' + seconds : seconds;

        // Return the formatted date string without commas
        return `${day}-${month}-${year} ${hours}:${minutes}:${seconds}`;
    }

    function selectedOption(e) {
        var option = e.component.option("value");

        if (option == 'Standard') {
            $('#standardFilterContainer').show();
            $('#datePickerContainer').hide();
        } else {
            $('#standardFilterContainer').hide();
            $('#datePickerContainer').show();
        }
        console.log("option:", option)
        $("#selectedOption").val(option);
    }

    function selectBox_valueChanged(data) {
        var selectedValue = data.value;
        $(".current-value > span").text(selectedValue);

        $("#selectedValue").val(selectedValue);
        console.log("selected value", selectedValue)
    }

    function fromDate(data) {
        var fromDateAndTime = new Date(data.value);
        var formattedFromDate = formatDate(fromDateAndTime);
        $("#fromDate").val(formattedFromDate);
        console.log("from date", formattedFromDate)
    }

    function toDate(data) {
        var toDateAndTime = new Date(data.value);
        var formattedToDate = formatDate(toDateAndTime);
        $("#toDate").val(formattedToDate);
        console.log("to date", formattedToDate)
    }

    $(document).ready(function () {
        // Set default value for selectedOption on page load
        $("#selectedOption").val("Standard");

        $(".previewBtn").click(function () {
            $("#myForm").submit(); // Submit the form
        });

        $("#myForm").submit(function (event) {
            // Prevent the default form submission behavior
            event.preventDefault();

            // Serialize the form data
            var formData = $(this).serialize();

            // Send an AJAX request to the server
            $.ajax({
                type: "POST",
                url: "/ListData/DataGrid", // URL to submit the form data to
                data: formData,
                success: function (response) {
                    // Update the specific portion of the page with the response data
                    $("#dataTable").html(response);
                },
                error: function (xhr, status, error) {
                    // Handle errors, if any
                    console.error("Error:", error);
                }
            });
        });
    });
</script> *@