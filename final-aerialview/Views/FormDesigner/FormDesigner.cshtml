@{
    ViewData["Title"] = "Form Designer";
}

<style>

    .form-wrap.form-builder .cb-wrap.sticky-controls {
        margin-left: 5px !important;
    }

    #fb-rendered-form {
        clear: both;
        display: none;
    }

    /* #fb-rendered-form button {
            float: right;
        } */

    .form-builder-dialog {
        z-index: 999;
        /* overflow-y: visible; */
    }

        .form-builder-dialog.positioned {
            overflow-y: visible;
        }

    .form-builder-overlay {
        z-index: 999;
    }

    .form-wrap.form-builder .cb-wrap .form-actions {
        float: left;
        margin-left: 2px;
    }

    .form-actions .save-template {
        background-color: #1866B0 !important;
        /* background-color: #333 !important; */
    }

    .form-actions .clear-all {
        /* background-color: #FAA41B !important; */
        background-color: #2f2f2fd1 !important;
    }

    .form-actions .get-data {
        /* background-color: #FAA41B !important; */
        background-color: #fff !important;
    }

    .saveDataWrap {
        text-align: center;
        margin-bottom: 10px;
    }
</style>

<div class="container-fluid  p-3">
    <div class="my-2 mt-1 p-1 d-flex align-items-center justify-content-between">
        <div class="fw-semibold mb-3 fs-5 text-center text-md-start">
            <i class="ri-edit-box-line text-primary fw-normal fs-4"></i> Custom Form Designer
        </div>

    </div>
    <div id="fb-editor"></div>

    <div id="fb-rendered-form" class=" bg-white p-2 position-relative">
        <form action="#"></form>
        @* <button class="btn btn-sm btn-warning edit-form">Edit</button> *@
        <div class="d-flex justify-content-end">
            <button id="editBtn" class="btn btn-sm btn-warning edit-form mt-3">Edit</button>
            <button id="exportBtn" class="btn btn-secondary btn-sm mt-3 mx-1" title="Export JSON"><i class="ri-upload-2-line"></i> Export JSON</button>
            <button id="saveFormBtn" class="btn text-white btn-sm edit-form mt-3 " style="background-color: #1866B0 !important;">Save Form</button>
        </div>
        @*  <div class="saveDataWrap">
        <button id="saveData" class="btn btn-sm btn-success edit-form mt-3 me-1" type="button">External Save Button</button>
        </div> *@
    </div>


    <!-- Preview, Export, Import, and Save Buttons -->
    @* <button id="previewBtn" class="btn btn-primary btn-sm mt-3">Preview Form</button>
    <button id="saveFormBtn" class="btn btn-success btn-sm mt-3">Save Form</button> *@
    @* <button id="exportBtn" class="btn btn-secondary btn-sm mt-3">Export JSON</button>
    <button id="importBtn" class="btn btn-secondary btn-sm mt-3">Import JSON</button> *@

    <!-- Form Preview Section -->
    <div id="form-preview" class="mt-5"></div>
</div>

<!-- Include jQuery and jQuery UI -->
@* <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script> *@
@* <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.13.2/jquery-ui.min.js"></script> *@
<script src="/lib/jquery.min.js"></script>
<script src="/lib/jquery-ui.min.js"></script>

<!-- Include FormBuilder -->
@* <script src="https://formbuilder.online/assets/js/form-builder.min.js"></script> *@
@* <script src="https://formbuilder.online/assets/js/form-render.min.js"></script> *@
<script src="/lib/form-builder.min.js"></script>
<script src="/lib/form-render.min.js"></script>

<!-- Include RateYo (for star rating functionality) -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/rateYo/2.3.2/jquery.rateyo.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/rateYo/2.3.2/jquery.rateyo.min.js"></script>
@* <link rel="stylesheet" href="~/lib/rateyo.min.css">
<script src="~/lib/rateyo.min.js"></script> *@

<script>

    jQuery(function ($) {
        // Define custom fields and templates for various elements
        let fields = [
            // { label: 'Star Rating', attrs: { type: 'starRating' }, icon: '🌟' },
            // { label: 'Color Picker', attrs: { type: 'colorPicker' }, icon: '🎨' },
        ];

        let templates = {

            // starRating: function (fieldData) {
            //     return {
            //         field: '<span id="' + fieldData.name + '"></span>',
            //         onRender: function () {
            //             $(document.getElementById(fieldData.name)).rateYo({ rating: 3.6 });
            //         }
            //     };
            // },
            // colorPicker: function (fieldData) {
            //     return {
            //         field: `<input type="color" id="${fieldData.name}" name="${fieldData.name}">`
            //     };
            // },

        };

        // Initialize formBuilder with custom fields, templates, and options
        var $fbEditor = $(document.getElementById('fb-editor')),
            $formContainer = $(document.getElementById('fb-rendered-form')),
            formBuilder = $fbEditor.formBuilder({
                fields: fields,
                templates: templates,
                onSave: function () {
                    // Toggle editor and show rendered form
                    $fbEditor.toggle();
                    $formContainer.toggle();

                    // Render the form with formRender and apply custom templates
                    $('form', $formContainer).formRender({
                        formData: formBuilder.actions.getData('json'),
                        templates: templates
                    });
                }
            });

        

        // Preview Form
        $('#previewBtn').on('click', function () {
            var formData = formBuilder.actions.getData('json');
            $('#form-preview').formRender({ formData, templates });
        });

        // Export JSON
        $('#exportBtn').on('click', function () {
            var formData = formBuilder.actions.getData('json');
            const blob = new Blob([formData], { type: 'application/json' });
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');

            let person = prompt("Save as:", "formData");
            if (person != null) {

                a.href = url;
                a.download = `${person}`;
                a.click();
                URL.revokeObjectURL(url);
            }
        });

        // Import JSON
        $('#importBtn').on('click', function () {
            // Use file input or hard-coded data for import (simplified here)
            const savedData = '[{"type": "text", "label": "Imported Field"}]';
            formBuilder.actions.setData(savedData);
        });

        // Save Form to Server (simulated)
        $('#saveFormBtn').on('click', function () {
            var formData = formBuilder.actions.getData('json');
            $.ajax({
                url: '/your-save-endpoint',
                type: 'POST',
                data: { formData: formData },
                success: function (response) {
                    alert('Form saved successfully!');
                    console.log(response)
                }
            });
        });

        // Edit Form Button (toggles back to the editor view)
        $('.edit-form', $formContainer).on('click', function () {
            $fbEditor.toggle();
            $formContainer.toggle();
        });

        document.getElementById("saveFormBtn").addEventListener("click", () => {
            console.log("external save clicked");
            const result = formBuilder.actions.save();
            console.log("result:", result);
        });
    });

    // jQuery(function ($) {
    //     // Define custom fields and templates
    //     let fields = [{
    //         label: 'Star Rating',
    //         attrs: {
    //             type: 'starRating'
    //         },
    //         icon: '🌟'
    //     }];

    //     let templates = {
    //         starRating: function (fieldData) {
    //             return {
    //                 field: '<span id="' + fieldData.name + '"></span>',
    //                 onRender: function () {
    //                     $(document.getElementById(fieldData.name)).rateYo({ rating: 3.6 });
    //                 }
    //             };
    //         }
    //     };

    //     // Initialize formBuilder with custom fields and templates
    //     // $('#fb-editor').formBuilder({
    //     //     fields: fields,
    //     //     templates: templates
    //     // });

    //     var $fbEditor = $(document.getElementById('fb-editor')),
    //         $formContainer = $(document.getElementById('fb-rendered-form')),
    //         fbOptions = {
    //             onSave: function () {
    //                 $fbEditor.toggle();
    //                 $formContainer.toggle();
    //                 $('form', $formContainer).formRender({
    //                     formData: formBuilder.formData
    //                 });
    //             }
    //         },
    //         formBuilder = $fbEditor.formBuilder(fbOptions);

    //     $('.edit-form', $formContainer).on('click', function () {
    //         $fbEditor.toggle();
    //         $formContainer.toggle();
    //     });
    // });


    // jQuery(function ($) {
    //     // Define custom fields and templates
    //     let fields = [{
    //         label: 'Star Rating',
    //         attrs: {
    //             type: 'starRating'
    //         },
    //         icon: '🌟'
    //     }];

    //     let templates = {
    //         starRating: function (fieldData) {
    //             return {
    //                 field: '<span id="' + fieldData.name + '"></span>',
    //                 onRender: function () {
    //                     $(document.getElementById(fieldData.name)).rateYo({ rating: 3.6 });
    //                 }
    //             };
    //         }
    //     };

    //     // Initialize formBuilder with custom fields, templates, and options
    //     var $fbEditor = $(document.getElementById('fb-editor')),
    //         $formContainer = $(document.getElementById('fb-rendered-form')),
    //         fbOptions = {
    //             fields: fields,
    //             templates: templates,
    //             onSave: function () {
    //                 // Hide editor and display rendered form
    //                 $fbEditor.toggle();
    //                 $formContainer.toggle();

    //                 // Render the form with formRender and apply custom templates
    //                 $('form', $formContainer).formRender({
    //                     formData: formBuilder.actions.getData('json'),
    //                     templates: templates
    //                 });
    //             }
    //         },
    //         formBuilder = $fbEditor.formBuilder(fbOptions);

    //     // Toggle back to form editor on "Edit" button click
    //     $('.edit-form', $formContainer).on('click', function () {
    //         $fbEditor.toggle();
    //         $formContainer.toggle();
    //     });
    // });
</script>
