@model ListDataViewModel


@{
    ViewData["Title"] = @Model.ChildMenuName;
}

@{
    var priorities = new[] { "Standard", "Date" };
    var Items = new[] { "Previous Day", "1 Week", "1 Month", "3 Months", "6 Months", "1 Year", "All" };
}



<div class='dataGridView rounded'>
    @if (Model.PdfImageData != null)
    {
        @foreach (var item in Model.PdfImageData)
        {
            <div class="d-flex align-items-center  gap-2 mt-3">
                <div class="overflow-hidden shadow rounded" style="width: auto; height:57px;">
                    <img class="d-inline object-fit-contain h-100 w-100" src="data:image/jpeg;base64,@item.Logo" alt="Logo" />
                </div> 
                <div class="d-flex flex-column gap-1">
                    <h6 class="mb-0 lh-sm fw-bold">Project:  <span class="fw-medium">@item.ProjectName</span></h6>
                    <h6 class="mb-0 lh-sm fw-bold">Client: <span class="fw-medium">@item.ClientName</span></h6>
                </div>
            </div>
        }
    }

    <div class='filterOptions position-relative d-flex align-items-center justify-content-start gap-2 shadow-lg border py-1 px-3 text-light'>
        <div class=" fs-5 fw-medium"><i class="ri-equalizer-2-fill"></i> Filter :</div>

        @if (priorities != null)
        {
            @for (int i = 0; i < priorities.Length; i++)
            {
                var option = priorities[i];
                var isChecked = i == 0 ? "checked" : "";
                <div class="radioOption d-flex align-items-center ms-2">
                    <div class="form-check mb-0">
                        <input class="form-check-input" type="radio" name="flexRadioDefault" id="@option" @isChecked onchange="selectedOption('@option')">
                        <label class="form-check-label">
                            @option
                        </label>
                    </div>
                </div>
            }
        }

        <div class="radioGroupContainer">
            <div id="standardFilterContainer" class="ms-2" style="display: block;">
                <div class="input-group input-group-sm">
                    <select id="standardFilter" class="form-select form-select-sm" onchange="selectBox_valueChanged(event)">
                        <option value="" selected disabled>Choose...</option>
                        @foreach (var item in Items)
                        {
                            <option value="@item" >@item</option>
                        }
                    </select>
                </div>
            </div>

            <div id="datePickerContainer" class="ms-2" style="display: none;">
                <div class="datePicker">
                    <div class="fromDate w-50">
                        <input type="datetime-local" id="fromDateInput" class="form-control form-control-sm" onchange="fromDate(event)">
                    </div>

                    <div class="toDate w-50">
                        <input type="datetime-local" id="toDateInput" class="form-control form-control-sm" onchange="toDate(event)">
                    </div>
                </div>
            </div>
            
        </div>

       
        <form id="filterForm" action="/ListData/DataGrid" method="post">
            <input type="hidden" id="selectedOption" name="option">
            <input type="hidden" id="selectedValue" name="selectedValue">
            <input type="hidden" id="fromDate" name="fromDate">
            <input type="hidden" id="toDate" name="toDate">

            <input type="hidden" name="tableName" value="@Model.TableName" />
            <input type="hidden" name="connString" value="@Model.ConnectionString" />
            <input type="hidden" name="rptId" value="@Model.RptId" />

            <div class="previewBtn">
                <button title="Apply Filter" type="button" class="btn btn-light btn-sm shadow-sm border d-flex align-items-center justify-content-center gap-1 py-0" style="padding: .25rem 0.5rem !important; ">
                    <i class="ri-send-plane-fill"></i>Apply
                </button>
            </div>
        </form>
        

        <a class="btn text-light text-decoration-none cursor-pointer position-absolute end-0 pr-3" title="Reset" onclick="onStateResetClick()">
            <i class="ri-refresh-line"></i>
        </a>
    </div>

    <partial name="~/Views/ListData/Datagrid.cshtml" />

</div>
<div id="toast" class="fw-normal"></div>

<script>
    function formatDate(date) {
        var day = date.getDate();
        var month = date.getMonth() + 1; // Months are zero-based
        var year = date.getFullYear();
        var hours = date.getHours();
        var minutes = date.getMinutes();
        var seconds = date.getSeconds();

        // Pad single digits with a leading zero
        day = day < 10 ? '0' + day : day;
        month = month < 10 ? '0' + month : month;
        hours = hours < 10 ? '0' + hours : hours;
        minutes = minutes < 10 ? '0' + minutes : minutes;
        seconds = seconds < 10 ? '0' + seconds : seconds;

        // Return the formatted date string
        return `${day}-${month}-${year} ${hours}:${minutes}:${seconds}`;
    }

    //select radio option
    function selectedOption(e) {
        var option = e;
        console.log(option);
        if (option === 'Standard') {
            $('#standardFilterContainer').show();
            $('#datePickerContainer').hide();
        } else {
            $('#standardFilterContainer').hide();
            $('#datePickerContainer').show();
        }
        $("#selectedOption").val(option);
    }

    //select box(dropdown value)
    function selectBox_valueChanged(event) {
        var selectedValue = event.target.value;

        $("#selectedValue").val(selectedValue);
        console.log("selected value", selectedValue);
    }

    //from date selected value 
    function fromDate(event) {
        var fromDateAndTime = new Date(event.target.value);
        var formattedFromDate = formatDate(fromDateAndTime);
        $("#fromDate").val(formattedFromDate);
        console.log("from date", formattedFromDate);
    }

    //to date selected value
    function toDate(event) {
        var toDateAndTime = new Date(event.target.value);
        var formattedToDate = formatDate(toDateAndTime);
        $("#toDate").val(formattedToDate);
        console.log("to date", formattedToDate);
    }


    function validateForm() {
        var option = $("#selectedOption").val();
        if (option === 'Standard') {
            var selectedValue = $("#selectedValue").val();
            if (!selectedValue) {
                showToast("Please select one of the filter options from the dropdown.");
                return false;
            }
        } else if (option === 'Date') {
            var fromDate = $("#fromDate").val();
            var toDate = $("#toDate").val();
            if (!fromDate || !toDate) {
                showToast("Please select both from and to dates.");
                return false;
            }
        }
        return true;
    }

    function showToast(message) {
        var toast = $("#toast").dxToast("instance");
        toast.option("message", message);
        toast.show();
    }


    $(document).ready(function () {
        // Initialize the toast instance
        $("#toast").dxToast({
            message: "",
            type: "error",
            displayTime: 3000,
            width: 300,
            position: {
                at: "top",
                my: "top",
                of: window
            }
        });
        // Set default value for selectedOption on page load
        $("#selectedOption").val("Standard");

        // Submit the form
        $(".previewBtn").click(function () {
            $("#filterForm").submit();
        });

        $("#filterForm").submit(function (event) {

            // Prevent the default form submission behavior
            event.preventDefault();

            if (!validateForm()) {
                return;
            }

            // Serialize the form data
            var formData = $(this).serialize();

            $.ajax({
                type: "POST",
                url: "/ListData/DataGrid", // URL to submit the form data to
                data: formData,
                success: function (response) {
                    // Update the specific portion of the page with the response data
                    $("#dataTable").html(response);
                },
                error: function (xhr, status, error) {
                    // Handle errors, if any
                    console.error("Error:", error);
                }

            });


        });
    });

</script>