@model ListDataViewModel

@{
    Layout = null;
}
<div id="dataTable" class="position-relative shadow-lg ">

    <div class="datagridWrapper bg-light bg-gradient rounded-top">

        @(Html.DevExtreme().DataGrid()
            .ID("dataGridContainer")
            .DataSource(Model.TableData)

            .FilterRow(filterRow => filterRow
            .Visible(true)
            .ApplyFilter(GridApplyFilterMode.Auto)
            )

            .StateStoring(s => s
            .Enabled(true)
            .Type(StateStoringType.LocalStorage)
            .StorageKey("storage")
            )
            .ColumnAutoWidth(true)
            .AllowColumnReordering(true)
            .ShowColumnLines(true)
            .ShowRowLines(true)
            .ColumnChooser(c => c.Enabled(true))
            .ColumnFixing(c => c.Enabled(true))
            .WordWrapEnabled(true)
            .HoverStateEnabled(true)
            .HeaderFilter(hf => hf
            .Visible(true)
            .Search(hfs => hfs.Enabled(true))
            )
            .GroupPanel(g => g.Visible(true))
            .Grouping(g => g.AutoExpandAll(false))

            .Columns(c =>
            {
                if (Model.TableData != null && Model.TableData.Any())
                {
                    var firstItem = (IDictionary<string, object>)Model.TableData.FirstOrDefault();
                    if (firstItem != null)
                    {
                        foreach (var property in firstItem.Keys)
                        {
                            if (property == "DateAndTime")
                            {
                                c.Add().DataField(property).Caption(property).DataType(GridColumnDataType.DateTime).Format("dd-MM-yyyy HH:mm:ss");
                            }
                            else
                            {
                                c.Add().DataField(property).Caption(property);
                            }
                        }
                    }
                }
            })
            .ShowColumnHeaders(true)
            .Pager(pager =>
            {
                pager.Visible(true);
                pager.DisplayMode(GridPagerDisplayMode.Compact);
                pager.ShowPageSizeSelector(true);
                pager.AllowedPageSizes(new JS("[5, 10, 'all']"));
                pager.ShowInfo(true);
                pager.ShowNavigationButtons(true);
            })
            .Paging(paging =>
            {
                paging.Enabled(true);
                paging.PageSize(10);
            })
            )
    </div>

    @{
        int datagridRptid = Model.RptId;
        var reportData = ViewData["ReportData"] as IEnumerable<final_aerialview.Models.LocalReportModel>;
        var reportItem = reportData?.FirstOrDefault(r => r.RptId == datagridRptid);
    }

    <div class="exportBtn position-sticky bg-white  d-flex justify-content-end align-items-center gap-2 border-top ">

        @if (User.IsInRole("admin"))
        {
            <a href="@Url.Action("ReportDesigner", "Report", new { datagridRptid = datagridRptid })" class="btn btn-light shadow border-dark btn-sm btn-custom text-decoration-none text-dark">
                <i class="ri-edit-line"></i> Design
            </a>


            @if (reportItem != null && !string.IsNullOrEmpty(reportItem.WebReportPath))
            {
                    <a  href="@Url.Action("DocumentViewer", "Report", new { datagridRptid = datagridRptid })" class="btn btn-light shadow border-dark btn-sm btn-custom text-decoration-none text-dark">
                    <i class="ri-printer-line"></i> Preview
                    </a>
            }
            else
            {
                <div>
                    @(Html.DevExtreme().Button()
                        .Text("No Report Available")
                        .Type(ButtonType.Normal)
                        .StylingMode(ButtonStylingMode.Text)
                        )
                </div>
               
            }
        }
        else // for users other than admin
        {
            @if (reportItem != null && !string.IsNullOrEmpty(reportItem.WebReportPath))
            {

                <a href="@Url.Action("DocumentViewer", "Report", new { datagridRptid = datagridRptid })" class="btn btn-light shadow border-dark btn-sm btn-custom text-decoration-none text-dark">
                    <i class="ri-printer-line"></i> Preview
                </a>
            }
            else
            {
                <div>
                    @(Html.DevExtreme().Button()
                        .Text("No Report Available")
                        .Type(ButtonType.Normal)
                        .StylingMode(ButtonStylingMode.Text)
                        )
                </div>
            }
        }



    </div>
</div>

