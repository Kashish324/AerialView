@{
    ViewData["Title"] = "Event Configuration";
}

@{
    var reports = ViewData["Reports"] as IEnumerable<final_aerialview.Models.ChildMenuModel>;
    var configurations = ViewData["EventConfigurations"] as IEnumerable<final_aerialview.Models.EventConfigModel>;
}


<div class="container-fluid p-3">

    <div class="my-2 mt-1 p-1 d-flex flex-wrap align-items-center justify-content-between">
        <div class="fw-semibold mb-3 fs-5 text-center text-md-start">
            <i class="ri-alarm-warning-line text-danger fw-normal fs-4"></i>  Alarm Configuration
        </div>

    </div>



    <!-- Event Configuration Card -->
    <div class="card p-3 mb-3 bg-light shadow">

        <!-- Form Content -->
        <form>
            <!-- Row 1: Connection String, Table Name and Column Name -->
            <div class="row mb-2">
                @* report name *@
                <div class="col-12 col-md-6 mb-2">
                    <label for="reportName" class="form-label fw-medium">Select Report:</label>
                    <select class="form-select form-select-sm fw-medium" id="reportName" required>
                        <option value="" selected disabled>Choose a report</option>

                        @if (reports != null)
                        {
                            @foreach (var report in reports)
                            {
                                <option class="fw-medium" value="@report.SubMenuId" data-table-name="@report.DataTableName" data-conn-string="@report.stringName">@report.SubChildName</option>
                            }
                        }

                    </select>
                </div>

                
                <div class="col-12 col-md-6 mb-2">
                    <label for="columnName" class="form-label fw-medium">Column Name:</label>
                    <select class="form-select form-select-sm fw-medium" id="columnName" required>
                        <option value="" selected disabled>Select Column</option>
                    </select>
                </div>
            </div>

            <!-- Row 2: Alarm & Warning Limits -->
            <div class="row mb-2">
                <div class="col-12 col-md-3 mb-2">
                    <label for="alarmHigh" class="form-label fw-medium">Alarm(HH):</label>
                    <input type="number" class="form-control form-control-sm fw-medium" id="alarmHigh" placeholder="High alarm value" required>
                </div>
                <div class="col-12 col-md-3 mb-2">
                    <label for="warningHigh" class="form-label fw-medium">Warning(H):</label>
                    <input type="number" class="form-control form-control-sm fw-medium" id="warningHigh" placeholder="High warning value" required>
                </div>
                <div class="col-12 col-md-3 mb-2">
                    <label for="warningLow" class="form-label fw-medium">Warning(L):</label>
                    <input type="number" class="form-control form-control-sm fw-medium" id="warningLow" placeholder="Low warning value" required>
                </div>
                <div class="col-12 col-md-3 mb-2">
                    <label for="alarmLow" class="form-label fw-medium">Alarm(LL):</label>
                    <input type="number" class="form-control form-control-sm fw-medium" id="alarmLow" placeholder="Low alarm value" required>
                </div>
            </div>

            <!-- Row 3: Event Created by, Status & Multiple Emails Input for Notification -->
            <div class="row mb-2">

                <div class="col-12 col-md-8 mb-2">
                    <label for="emailInput" class="form-label fw-medium">Send Notification to Emails:</label>
                    <input type="email" class="form-control form-control-sm fw-medium" id="emailInput" placeholder="Enter multiple emails separated by commas" multiple required>
                </div>
                <div class="col-12 col-md-4 mb-2">
    <label for="status" class="form-label fw-medium">Status:</label>
    <div class="form-check form-switch mt-1">
        <input class="form-check-input" type="checkbox" id="statusToggle" checked>
        <span id="statusBadge" class=" text-primary-emphasis fw-medium">Active</span>
    </div>
</div>
            </div>

            <!-- Submit Button -->
            <div class="d-flex justify-content-center justify-content-md-end text-center mt-3">
                <button type="submit" class="btn btn-sm fw-medium focus-ring focus-ring-primary text-white" style="background-color: #1866B0 !important ">Save</button>
            </div>
        </form>

    </div>

    <!-- Data Table Section (Responsive) -->

    <div class="card p-3 mb-3 bg-light shadow">
        <h5 class="card-title text-center mb-3 fs-5">Existing Configurations</h5>
        @if (configurations != null && configurations.Count() > 0)
        {
            <div class="table-responsive">
                <table class="table table-striped table-bordered table-sm align-middle">
                    <thead>
                        <tr class="text-center">
                            <th>Id</th>
                            <th>Report Name</th>
                            <th>Column Name</th>
                            <th>Alarm High(HH)</th>
                            <th>Warning High(H)</th>
                            <th>Warning Low(L)</th>
                            <th>Alarm Low(LL)</th>
                            <th>Last Updated Time</th>
                            <th>Last Updated By</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var config in configurations)
                        {
                            <tr class="text-center fw-medium">
                                <td>@config.Id</td>
                                <td>@config.ReportName</td>
                                <td>@config.ColumnName</td>
                                <td>@config.AlarmHigh</td>
                                <td>@config.WarningHigh</td>
                                <td>@config.WarningLow</td>
                                <td>@config.AlarmLow</td>
                                <td class="text-muted">@config.UpdatedAt</td>
                                <td class="text-muted">@config.UpdatedByName</td>
                                @if (config.Status == true)
                                {
                                    <td> <i class="ri-circle-fill text-success"></i></td>
                                }
                                else
                                {
                                    <td> <i class="ri-circle-fill text-danger"></i></td>

                                }
                                <td class="text-center align-middle">
                                    <button class="p-0 border-0 bg-transparent btn btn-sm btn-warning fs-5" aria-label="Edit">
                                        <i class="ri-edit-line text-warning"></i>
                                    </button>
                                    <div class="mx-2" style="display: inline-block; border-left: 1px solid #ccc; height: 10px;"></div>
                                    <button class="p-0 border-0 bg-transparent btn btn-sm btn-danger fs-5" aria-label="Delete">
                                        <i class="ri-delete-bin-5-line text-danger"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="alert alert-warning text-center" role="alert">
                No event configuration available.
            </div>
        }

    </div>
</div>




<script>
    //toggling status on click 
    document.getElementById("statusToggle").addEventListener("change", function() {
        var statusBadge = document.getElementById("statusBadge");
        if (this.checked) {
            statusBadge.innerHTML = "Active";
        } else {
            statusBadge.innerHTML = "Inactive";
        }
    });
   
   
    //basis on the selected report name's corresponding connection string, tablename populating column name dropdown
$('#reportName').on('change', function () {
        // const selectedReport = $(this).val();
        const selectedReport = $(this).find('option:selected');
        const connString = selectedReport.data('conn-string'); // Get the connection string from data attribute
        const tableName = selectedReport.data('table-name'); // Get the table name from data attribute

        console.log(connString)
        console.log(tableName)

        // AJAX call to get the column name based on the selected report
        $.ajax({
            url: '/EventConfiguration/GetColumnNames', 
            type: 'GET',
            data: { connectionString: connString, tableName: tableName },
            success: function (data) {
                // Clear the previous options in the column name dropdown
                $('#columnName').empty().append('<option value="" selected disabled>Select column</option>');

                // Populate the column name dropdown
                if (data && data.length > 0) {
                    data.forEach(function (column) {
                        $('#columnName').append('<option class="fw-medium" value="' + column + '">' + column + '</option>');
                    });
                }
            },
            error: function () {
                alert('Error fetching table names. Please try again.');
            }
        });
    });

</script>