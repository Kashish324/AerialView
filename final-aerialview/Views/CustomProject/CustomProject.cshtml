@model final_aerialview.Models.SubMenuModel
@{
    ViewData["Title"] = "Custom Project";
}

<div class="container-fluid p-3">
    <div class="my-2 mt-1 p-1 d-flex align-items-center justify-content-between">
        <div class="fw-semibold mb-3 fs-5 text-center text-md-start text-primary">
            <i class="ri-link-m text-primary fw-normal fs-4"></i> Custom Project
        </div>
    </div>

    <!-- Form Section -->
    <div class="card shadow-sm border-0 rounded-4 mb-4">
        <div class="card-body">
            <h5 class="card-title mb-3 text-primary fw-semibold">Add New Project</h5>
            <form method="post" action="/CustomProject/CustomProject">
                @* to hold the submenu code while editing *@
                <input type="hidden" id="LinkId" name="LinkId" value="">
                <div class="mb-3">
                    <label for="SubMenuName" class="form-label fw-medium">Name</label>
                    <input type="text" class="form-control shadow-sm" id="SubMenuName" name="SubMenuName" value="@Model.SubMenuName" placeholder="Enter project name" required>
                </div>
                <div class="mb-3">
                    <label for="Link_FormName" class="form-label fw-medium">Project Address</label>
                    <input type="url" class="form-control shadow-sm" id="Link_FormName" name="Link_FormName" value="@Model.Link_FormName" placeholder="https://example.com" required>
                </div>
                <button id="addLink" title="Add" type="submit" class="btn btn-primary btn-sm text-white rounded-3 shadow-sm fw-medium focus-ring focus-ring-primary border-0" style="background-color: #1866B0;">Add Link</button>
            </form>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            @TempData["SuccessMessage"]
        </div>
    }
    @if (ViewBag.ErrorMessage != null)
    {
        <div class="alert alert-danger">
            @ViewBag.ErrorMessage
        </div>
    }



    <!-- Saved Links Section -->
    <div class="card shadow-sm border-0 rounded-4">
        <div class="card-body">
            <h5 class="card-title text-primary mb-3 fw-semibold">Saved Links</h5>
            <ul class="list-group overflow-auto custom-scrollbar" style="max-height: 400px;">
                @if (ViewBag.SavedLinks != null && ViewBag.SavedLinks.Count > 0)
                {
                    foreach (var link in ViewBag.SavedLinks)
                    {
                        <li class="list-group-item d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center border-0 rounded-3 mb-2 shadow-sm">
                            <div class="mb-2 mb-md-0">
                                <strong class="text-capitalize">@link.SubMenuName</strong><br>
                                <a href="@link.Link_FormName" class="text-muted small" target="_blank">@link.Link_FormName</a>
                            </div>
                            <div class="d-flex justify-content-end">

                                @* <button class="btn btn-sm btn-outline-info rounded-3 me-2 edit-link-btn" data-id="@link.MainMenuCode" data-id="@link.SubMenuCode" onclick="editCustomProjData(@link.SubMenuCode)"> *@
                                @*     <i class="ri-edit-2-line"></i> Edit *@
                                @* </button> *@



                              

                                @* <button class="btn btn-sm btn-outline-danger rounded-3" *@
                                @*         onclick="handleDeleteLink(@link.SubMenuCode, '@link.SubMenuName')"> *@
                                @*     <i class="ri-delete-bin-6-line"></i> Delete *@
                                @* </button> *@


                            </div>
                        </li>
                    }
                }
                else
                {
                    <li class="list-group-item border-0 text-muted text-center">
                        No links available.
                    </li>
                }
            </ul>
        </div>
    </div>
</div>


<script>
        function editCustomProjData(subMenuCode) {


        $.ajax({
            url: '/CustomProject/GetLinkDetails',
            type: 'GET',
            data: { subMenuCode: subMenuCode },
            success: function (response) {
                console.log(response.data[0].SubMenuCode)
                if (response) {
                    $('#LinkId').val(response.data[0].SubMenuCode); // Hidden field for ID
                    $('#SubMenuName').val(response.data[0].SubMenuName);
                    $('#Link_FormName').val(response.data[0].Link_FormName);
                    $('button[type="submit"]').text('Update Link'); // Change button text
                }
            },
            error: function (xhr, status, error) {
                console.error(error);
            }
        });
    }


    // function handleDeleteLink(subMenuCode, subMenuName){
    //     $.ajax({
    //         url: '/CustomProject/DeleteCustomLink',
    //         type: 'POST',
    //         data: { subMenuCode: subMenuCode },
    //         success: function(response){
    //             DevExpress.ui.notify({
    //             message: response,
    //             width: 400,
    //             type: type,
    //             displayTime: 3500,
    //             shading: true,
    //             animation: {
    //                 show: { type: "fade", duration: 400, from: 0, to: 1 },
    //                 hide: { type: "fade", duration: 40, to: 0 }
    //             }
    //         }, {
    //             position: "bottom center",
    //             direction: "up-push"
    //         });
    //         }
    //     })
    // }

           function handleDeleteLink(subMenuCode, subMenuName) {
        if (confirm("Are you sure you want to delete this saved project: " + subMenuName + "?")) {
            $.ajax({
                url: '/CustomProject/DeleteCustomLink',
                type: 'POST',
                data: {
                    subMenuCode: subMenuCode,
                    subMenuName: subMenuName
                },
                success: function (response) {
                    DevExpress.ui.notify({
                        message: response,
                        width: 400,
                        type: "success",
                        displayTime: 3500,
                        shading: true,
                        animation: {
                            show: { type: "fade", duration: 400, from: 0, to: 1 },
                            hide: { type: "fade", duration: 40, to: 0 }
                        }
                    }, {
                        position: "bottom center",
                        direction: "up-push"
                    });

                    // Reload the page to reflect the changes
                    setTimeout(function() {
                        location.reload();
                    }, 1000);
                },
                error: function (xhr, status, error) {
                    console.error(error);
                    DevExpress.ui.notify({
                        message: "Failed to delete the link. Please try again.",
                        width: 400,
                        type: "error",
                        displayTime: 3500,
                        shading: true,
                        animation: {
                            show: { type: "fade", duration: 400, from: 0, to: 1 },
                            hide: { type: "fade", duration: 40, to: 0 }
                        }
                    }, {
                        position: "bottom center",
                        direction: "up-push"
                    });
                }
            });
        }
    }




    $(document).ready(function () {
        var message = '@TempData["NotificationMessage"]';
        var type = '@TempData["NotificationType"]';

        if (message) {
            DevExpress.ui.notify({
                message: message,
                width: 400,
                type: type,
                displayTime: 3500,
                shading: true,
                animation: {
                    show: { type: "fade", duration: 400, from: 0, to: 1 },
                    hide: { type: "fade", duration: 40, to: 0 }
                }
            }, {
                position: "bottom center",
                direction: "up-push"
            });
        }
    });





</script>
